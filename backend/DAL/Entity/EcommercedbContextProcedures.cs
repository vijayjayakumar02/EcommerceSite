// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.Data.SqlClient;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;
using DAL.Entity;

namespace DAL.Entity
{
    public partial class EcommercedbContext
    {
        private EcommercedbContextProcedures _procedures;

        public virtual EcommercedbContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new EcommercedbContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public EcommercedbContextProcedures GetProcedures()
        {
            return Procedures;
        }
    }

    public partial class EcommercedbContextProcedures
    {
        private readonly EcommercedbContext _context;

        public EcommercedbContextProcedures(EcommercedbContext context)
        {
            _context = context;
        }

        public virtual async Task<List<uspGetProductListResult>> uspGetProductListAsync(string Value, int? PageIndex, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "Value",
                    Size = 200,
                    Value = Value ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.NVarChar,
                },
                new SqlParameter
                {
                    ParameterName = "PageIndex",
                    Value = PageIndex ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "PageSize",
                    Value = PageSize ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<uspGetProductListResult>("EXEC @returnValue = [dbo].[uspGetProductList] @Value, @PageIndex, @PageSize", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
